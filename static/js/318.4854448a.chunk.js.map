{"version":3,"file":"static/js/318.4854448a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/phoneBook/ContactForm/ContactForm.styled.js","components/phoneBook/ContactForm/ContactForm .jsx","components/phoneBook/ContactsList/ContactsList.styled.js","components/phoneBook/ContactsList/ContactsList.jsx","components/phoneBook/Filter/Filter.styled.js","components/phoneBook/Filter/Filter.jsx","pages/Contacts.styled.js","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n    return visibleContacts;\n  }\n);","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from '../../../redux/contacts/operations';\nimport { getContacts } from '../../../redux/contacts/selectors';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport { Form } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const allContacts = useSelector(getContacts);\n\n  function handelInputChange(event) {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  function handelSubmit(event) {\n    event.preventDefault();\n\n    const contactName = [];\n\n    for (const contact of allContacts) {\n      contactName.push(contact.name);\n    }\n\n    if (contactName.includes(name)) {\n      alert(`${name} is already in contacts list`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    reset();\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: 752, width: 'inherit' }}>\n      <Form onSubmit={handelSubmit}>\n        <Typography\n          variant=\"body\"\n          component=\"lable\"\n          color=\"primary.contrastText\"\n        >\n          Name\n        </Typography>\n\n        <TextField\n          label=\"name\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handelInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Typography\n          variant=\"body\"\n          component=\"lable\"\n          color=\"primary.contrastText\"\n        >\n          Number\n        </Typography>\n        <TextField\n          label=\"number\"\n          variant=\"outlined\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handelInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <label>\n          <Button variant=\"contained\" startIcon={<AddIcon />} type=\"submit\">\n            Add contact\n          </Button>\n        </label>\n      </Form>\n    </Box>\n  );\n}","import styled from '@emotion/styled';\nimport { ListItem } from '@mui/material';\n\nexport const Item = styled(ListItem)`\n  :hover {\n    background-color: #90A955;\n    border-radius: 8px;\n  }\n`;","import React from 'react';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../../redux/contacts/operations';\nimport {\n  getLoading,\n  getError,\n  selectVisibleContacts,\n} from '../../../redux/contacts/selectors';\nimport { fetchContacts } from '../../../redux/contacts/operations';\n\nimport {\n  Box,\n  Grid,\n  Typography,\n  List,\n  IconButton,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Item } from '../ContactsList/ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(getLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: 752, width: 'inherit' }}>\n      <Grid>\n        <Typography variant=\"h4\" component=\"h2\">\n          {' '}\n          My contacts\n        </Typography>\n        {isLoading && !error && <b>Request in progress...</b>}\n        <List>\n          {contacts.length > 0\n            ? contacts.map(contact => (\n                <Item\n                  key={contact.id}\n                  secondaryAction={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => dispatch(deleteContacts(contact.id))}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemAvatar>\n                    <Avatar />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Typography component=\"p\" variant=\"h6\">\n                        {contact.name}: {contact.number}\n                      </Typography>\n                    }\n                  />\n                </Item>\n              ))\n            : 'No contact here yet'}\n        </List>\n      </Grid>\n    </Box>\n  );\n};","import styled from '@emotion/styled';\n\nimport { Box } from '@mui/material';\n\nexport const FilterForm = styled(Box)`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;","import { FilterForm } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { filterContacts } from '../../../redux/contacts/contactsSlice';\nimport { getFilter } from '../../../redux/contacts/selectors';\n\nimport { TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  function filterName(event) {\n    dispatch(filterContacts(event.currentTarget.value));\n  }\n\n  return (\n    <FilterForm sx={{ flexGrow: 1, maxWidth: 752 }}>\n      <Typography\n        variant=\"body\"\n        component=\"lable\"\n        color=\"primary.contrastText\"\n      ></Typography>\n      <TextField\n        label=\"find your contact\"\n        variant=\"outlined\"\n        type=\"text\"\n        value={filter}\n        onChange={filterName}\n      />\n    </FilterForm>\n  );\n};","import styled from '@emotion/styled';\nimport { Container } from '@mui/material';\n\nexport const Wrapper = styled(Container)`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;","import ContactForm from '../components/phoneBook/ContactForm/ContactForm ';\nimport { ContactsList } from '../components/phoneBook/ContactsList/ContactsList';\nimport { Filter } from '../components/phoneBook/Filter/Filter';\n\nimport { Wrapper } from './Contacts.styled';\n\nconst ContactsPage = () => {\n  return (\n    <Wrapper sx={{ mt: { xs: '5px', sm: '20px' } }}>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </Wrapper>\n  );\n};\nexport default ContactsPage;"],"names":["getFilter","state","contacts","filter","getContacts","getLoading","isLoading","getError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","trim","Form","styled","_templateObject","_taggedTemplateLiteral","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","allContacts","useSelector","handelInputChange","event","currentTarget","value","_jsx","Box","sx","flexGrow","maxWidth","width","children","_jsxs","onSubmit","preventDefault","_step","contactName","_iterator","_createForOfIteratorHelper","s","n","done","push","err","e","f","alert","concat","addContacts","Typography","variant","component","color","TextField","label","autoComplete","type","onChange","pattern","title","required","Button","startIcon","AddIcon","Item","ListItem","ContactsList","useEffect","fetchContacts","Grid","List","length","map","secondaryAction","IconButton","edge","onClick","deleteContacts","id","DeleteIcon","ListItemAvatar","Avatar","ListItemText","primary","FilterForm","Filter","filterContacts","Wrapper","Container","mt","xs","sm"],"sourceRoot":""}